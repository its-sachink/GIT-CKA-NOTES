I see lot of Kubeadm init options questions: i created short quick notes may be useful.

---
Try kubeadm init multiple combinations like --certificate-key , --control-plane-endpoint , --ignore-preflight-errors , --pod-network-cidr , --token  , --config
     (https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/#options)


Kubeadm init:

--control-plane-endpoint 172.17.0.111
(Recommended) If you have plans to upgrade this single control-plane kubeadm cluster to high availability you should specify the --control-plane-endpoint to set the shared endpoint for all control-plane nodes. Such an endpoint can be either a DNS name or an IP address of a load-balancer.

--apiserver-advertise-address string		
(Optional) Unless otherwise specified, kubeadm uses the network interface associated with the default gateway to set the advertise address for this particular control-plane node's API server. To use a different network interface, specify the --apiserver-advertise-address=<ip-address> argument to kubeadm init. To deploy an IPv6 Kubernetes cluster using IPv6 addressing, you must specify an IPv6 address, for example --apiserver-advertise-address=fd00::101
The IP address the API Server will advertise it's listening on. If not set the default network interface will be used.
In case node/vm having 2 or more interfaces (ip link) multiple IP addressed assigned ( May be static/dynamic) and you want to use particular IP ( Obviously Static one). This option will set that IP as apiserver.

--pod-network-cidr string		
Specify range of IP addresses for the pod network. If set, the control plane will automatically allocate CIDRs for every node. exp : 10.244.0.0/16
( Not all CNI takes from this e.g - weave-net takes default range ( 10.32.0.0/16) so whatever CIDR you have in --pod-network-cidr will not take effect however calico / flannel etc needs this to be set, Its mentioned in each CNI section which CNI uses this. So in case you are required to choose particular CIDR then use the CNI accordignly)
Choose a Pod network add-on, and verify whether it requires any arguments to be passed to kubeadm init. Depending on which third-party provider you choose, you might need to set the --pod-network-cidr to a provider-specific value. See Installing a Pod network add-on.

--control-plane-endpoint
Recommended) If you have plans to upgrade this single control-plane kubeadm cluster to high availability you should specify the --control-plane-endpoint to set the shared endpoint for all control-plane nodes. Such an endpoint can be either a DNS name or an IP address of a load-balancer. ( Possible use case is HA - multiple Master case)

--cert-dir /etc/kubernetes/pki/custom
The path where to save and store the ( Default: "/etc/kubernetes/pki")
there are 2 config map gets created once you run kubeadm init command 
( Kubectl -n kube-system get cm) 
1. Kubelet.conf
2. kubeadm  these cm holds the placeholder

--apiserver-cert-extra-sans
Optional extra Subject Alternative Names (SANs) to use for the API Server serving certificate. Can be both IP addresses and DNS names.
kubeadm init --apiserver-cert-extra-sans k8s --cert-dir /etc/kubernetes/pki/custom --node-name kubemaster
[WARNING Hostname]: hostname "kubemaster" could not be reached  - ignore that


master $ pwd
/etc/kubernetes/pki/custom
master $ ls
apiserver.crt              apiserver.key                 ca.crt  front-proxy-ca.crt      front-proxy-client.key
apiserver-etcd-client.crt  apiserver-kubelet-client.crt  ca.key  front-proxy-ca.key      sa.key
apiserver-etcd-client.key  apiserver-kubelet-client.key  etcd    front-proxy-client.crt  sa.pub
In apiserver.crt
X509v3 Subject Alternative Name:
                DNS:k8s,kubemaster, DNS:kubernetes, DNS:kubernetes.default, DNS:kubernetes.default.svc, DNS:kubernetes.default.svc.cluster.local, DNS:k8s, IP Address:10.96.0.1, IP Address:172.17.0.33

--config string		Path to a kubeadm configuration file.

--node-name string		Specify the node name. else it takes automatically hostname of m/c
Setting the node name
By default, kubeadm assigns a node name based on a machine's host address. You can override this setting with the 

--node-name flag. The flag passes the appropriate --hostname-override value to the kubelet.

# kubeadm init --config=<path>/conf_file --ignore-preflight-errors=all
	
	- if the config file is given and need to use that config while bootstrapping the cluster then use this flag. This is generally the same kubeconfig for the kubeadm which you see as Config map of Kubeadm.
kubeadm reset to revert any changes made to this host by kubeadm init or kubeadm join