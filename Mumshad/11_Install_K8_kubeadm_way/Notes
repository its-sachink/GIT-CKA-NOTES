################ Notes ##############

- Steps to install the kubernetes using "kubeadm" tools :

	1) Install Docker on all nodes
	2) Install "kubeadm" on all nodes
	3) Initialize the master server : install all components on master server
	4) Install the POD networking solution : CNI
	5) Join the Worker nodes to the master node


- Practise lab :


	1) In documentation page search for "kubeadm install"

	2) - On Master node :
			-**** Update the repository and GPG for k8 on master node.
			- Install kubeadm, kubelet and kubectl

	3) - On node01 :
			- Update the repository and GPG on k8 on master node.
			- Install kubeadm, kubelet and kubectl

	4) Bootstrap kubernetes cluster :
		- At the bottom of the same page click on "Using kubeadm to Create Cluster"

			# kubeadm init      <<< Only on master

	5) Copy the kube/config file to directory. Copy those commands on the notepad.

		# mkdir command <<< on master node

	6) On worker node.

		# kubeadm token create --help
		# kubeadm token create --print-join-command  	<<< In case you missed the above join command on master node

		# run command of join on the node01


	7) # kubectl get nodes

	8) On same page scroll down and click on Weave option.

		- Run this on both the nodes

			# sysctl rule
			# kubectl apply -f weave-plugin

	1. make IP table changes on both the nodes master and node01
	2. Install the kubeadm package on master and node01
	3. Master - Bootstrap master "kubeadm init" -- and run that mkdir command
	4. Node01 - join node01 using "kubeadm join command"
	5. Then install Weave only on master


--------------------------------------------------------

1) Install the kubeadm package on master and node01

	# cat /etc/os-release

		xenial

	- search "kubeadm install"

		# sudo apt-get update && sudo apt-get install -y apt-transport-https curl
		# curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
		# cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
		deb https://apt.kubernetes.io/ kubernetes-xenial main
		EOF

		-- install kubelet, kubeadm and kubectl

		# sudo apt-get update
		# sudo apt-get install -y kubelet kubeadm kubectl
		# sudo apt-mark hold kubelet kubeadm kubectl

		# kubeadm version -o short

		-- repeat same on node01


2) Version of kubelet installed

		# kubelet --version



4) Bootstrap kubernetes using kubeadm.
5) Initialize control plane components on the master node.

	- at the bottom of the doc "using kubeadm to create a cluster"

		# kubeadm init 		<<<< on master node only


	------------------ you will get this -----------------------------
	Your Kubernetes control-plane has initialized successfully!

	To start using your cluster, you need to run the following as a regular user:

	  mkdir -p $HOME/.kube                  
	  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	  sudo chown $(id -u):$(id -g) $HOME/.kube/config

	You should now deploy a pod network to the cluster.
	Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
	  https://kubernetes.io/docs/concepts/cluster-administration/addons/

	Then you can join any number of worker nodes by running the following on each as root:

	kubeadm join 172.17.0.24:6443 --token 037iwn.iw6u2fp7uw5abb9c \
	    --discovery-token-ca-cert-hash sha256:bcc65e1372b3d7e082311a1f57ba357aedad0a8a4eb753ca8a0ded470757100c
	-------------------------------------------------------------------

	
	----------------- Run this only on master node -----------------------
	  mkdir -p $HOME/.kube
	  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
	  sudo chown $(id -u):$(id -g) $HOME/.kube/config
	----------------------------------------------------------------------


6) Generate the kubeadm token

	- In case you have lost the one in previous step.

	# kubeadm token create --help

	# kubeadm token create --print-join-command 		<<<< Run this on master node
		kubeadm join 172.17.0.24:6443 --token 037iwn.iw6u2fp7uw5abb9c \
	    --discovery-token-ca-cert-hash sha256:bcc65e1372b3d7e082311a1f57ba357aedad0a8a4eb753ca8a0ded470757100c 	<<<< Run this on the worker node

	--- on master

	# kubectl get nodes 



7) Install network plugin

	---- Go to first page again(kubeadm install) and copy the command of 'sysctl' to enable port forwarding.

	-- Run on both the nodes --
	master and node01
	---------------------------------------
	cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
	net.bridge.bridge-nf-call-ip6tables = 1
	net.bridge.bridge-nf-call-iptables = 1
	EOF
	sudo sysctl --system
	----------------------------------------

	-- go to second page and copy the command to deploy the weave plugin

	-- Deploy the weave plugin on master node only as it is a kubectl command
	
	# kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"


	




	


